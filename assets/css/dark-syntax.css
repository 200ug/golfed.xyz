/* Generated using: hugo gen chromastyles --style=github-dark */

/* Background */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .bg {
  color: #e6edf3;
  background-color: #0d1117;
}
/* PreWrapper */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma {
  color: #e6edf3;
  background-color: #0d1117;
}
/* Error */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .err {
  color: #f85149;
}
/* LineLink */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .lnlinks {
  outline: none;
  text-decoration: none;
  color: inherit;
}
/* LineTableTD */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .lntd {
  vertical-align: top;
  padding: 0;
  margin: 0;
  border: 0;
}
/* LineTable */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .lntable {
  border-spacing: 0;
  padding: 0;
  margin: 0;
  border: 0;
}
/* LineHighlight */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .hl {
  background-color: #6e7681;
}
/* LineNumbersTable */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .lnt {
  white-space: pre;
  -webkit-user-select: none;
  user-select: none;
  margin-right: 0.4em;
  padding: 0 0.4em 0 0.4em;
  color: #737679;
}
/* LineNumbers */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .ln {
  white-space: pre;
  -webkit-user-select: none;
  user-select: none;
  margin-right: 0.4em;
  padding: 0 0.4em 0 0.4em;
  color: #6e7681;
}
/* Line */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .line {
  display: flex;
}
/* Keyword */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .k {
  color: #ff7b72;
}
/* KeywordConstant */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .kc {
  color: #79c0ff;
}
/* KeywordDeclaration */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .kd {
  color: #ff7b72;
}
/* KeywordNamespace */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .kn {
  color: #ff7b72;
}
/* KeywordPseudo */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .kp {
  color: #79c0ff;
}
/* KeywordReserved */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .kr {
  color: #ff7b72;
}
/* KeywordType */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .kt {
  color: #ff7b72;
}
/* NameClass */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .nc {
  color: #f0883e;
  font-weight: bold;
}
/* NameConstant */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .no {
  color: #79c0ff;
  font-weight: bold;
}
/* NameDecorator */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .nd {
  color: #d2a8ff;
  font-weight: bold;
}
/* NameEntity */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .ni {
  color: #ffa657;
}
/* NameException */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .ne {
  color: #f0883e;
  font-weight: bold;
}
/* NameLabel */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .nl {
  color: #79c0ff;
  font-weight: bold;
}
/* NameNamespace */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .nn {
  color: #ff7b72;
}
/* NameProperty */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .py {
  color: #79c0ff;
}
/* NameTag */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .nt {
  color: #7ee787;
}
/* NameVariable */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .nv {
  color: #79c0ff;
}
/* NameVariableClass */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .vc {
  color: #79c0ff;
}
/* NameVariableGlobal */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .vg {
  color: #79c0ff;
}
/* NameVariableInstance */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .vi {
  color: #79c0ff;
}
/* NameVariableMagic */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .vm {
  color: #79c0ff;
}
/* NameFunction */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .nf {
  color: #d2a8ff;
  font-weight: bold;
}
/* NameFunctionMagic */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .fm {
  color: #d2a8ff;
  font-weight: bold;
}
/* Literal */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .l {
  color: #a5d6ff;
}
/* LiteralDate */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .ld {
  color: #79c0ff;
}
/* LiteralString */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .s {
  color: #a5d6ff;
}
/* LiteralStringAffix */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .sa {
  color: #79c0ff;
}
/* LiteralStringBacktick */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .sb {
  color: #a5d6ff;
}
/* LiteralStringChar */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .sc {
  color: #a5d6ff;
}
/* LiteralStringDelimiter */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .dl {
  color: #79c0ff;
}
/* LiteralStringDoc */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .sd {
  color: #a5d6ff;
}
/* LiteralStringDouble */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .s2 {
  color: #a5d6ff;
}
/* LiteralStringEscape */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .se {
  color: #79c0ff;
}
/* LiteralStringHeredoc */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .sh {
  color: #79c0ff;
}
/* LiteralStringInterpol */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .si {
  color: #a5d6ff;
}
/* LiteralStringOther */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .sx {
  color: #a5d6ff;
}
/* LiteralStringRegex */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .sr {
  color: #79c0ff;
}
/* LiteralStringSingle */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .s1 {
  color: #a5d6ff;
}
/* LiteralStringSymbol */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .ss {
  color: #a5d6ff;
}
/* LiteralNumber */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .m {
  color: #a5d6ff;
}
/* LiteralNumberBin */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .mb {
  color: #a5d6ff;
}
/* LiteralNumberFloat */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .mf {
  color: #a5d6ff;
}
/* LiteralNumberHex */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .mh {
  color: #a5d6ff;
}
/* LiteralNumberInteger */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .mi {
  color: #a5d6ff;
}
/* LiteralNumberIntegerLong */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .il {
  color: #a5d6ff;
}
/* LiteralNumberOct */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .mo {
  color: #a5d6ff;
}
/* Operator */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .o {
  color: #ff7b72;
  font-weight: bold;
}
/* OperatorWord */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .ow {
  color: #ff7b72;
  font-weight: bold;
}
/* Comment */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .c {
  color: #8b949e;
  font-style: italic;
}
/* CommentHashbang */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .ch {
  color: #8b949e;
  font-style: italic;
}
/* CommentMultiline */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .cm {
  color: #8b949e;
  font-style: italic;
}
/* CommentSingle */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .c1 {
  color: #8b949e;
  font-style: italic;
}
/* CommentSpecial */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .cs {
  color: #8b949e;
  font-weight: bold;
  font-style: italic;
}
/* CommentPreproc */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .cp {
  color: #8b949e;
  font-weight: bold;
  font-style: italic;
}
/* CommentPreprocFile */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .cpf {
  color: #8b949e;
  font-weight: bold;
  font-style: italic;
}
/* GenericDeleted */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .gd {
  color: #ffa198;
  background-color: #490202;
}
/* GenericEmph */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .ge {
  font-style: italic;
}
/* GenericError */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .gr {
  color: #ffa198;
}
/* GenericHeading */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .gh {
  color: #79c0ff;
  font-weight: bold;
}
/* GenericInserted */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .gi {
  color: #56d364;
  background-color: #0f5323;
}
/* GenericOutput */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .go {
  color: #8b949e;
}
/* GenericPrompt */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .gp {
  color: #8b949e;
}
/* GenericStrong */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .gs {
  font-weight: bold;
}
/* GenericSubheading */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .gu {
  color: #79c0ff;
}
/* GenericTraceback */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .gt {
  color: #ff7b72;
}
/* GenericUnderline */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .gl {
  text-decoration: underline;
}
/* TextWhitespace */
:is(html:not(:has(#theme-toggle:checked)), html[data-theme="dark"]) .chroma .w {
  color: #6e7681;
}
